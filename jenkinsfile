properties([parameters([choice(choices: ['Patch','Minor','Major'], description: 'Third stage meassage', name: 'ImageTag' )])])
pipeline{
  agent any
   environment {
    DOCKERHUB_CREDENTIALS=credentials('dockerhub')
  }
  stages{
        stage('Build'){
            steps{
              script{
       def version = readFile('VERSION')
                     echo "${version}"

                     if("${ImageTag}"=="Patch"){
                      echo "This is patch version"
		      def versions = version.split('\\.')
		      def last = versions[2]
		      last = last.toInteger() + 1;
		      def patch = versions[0] + '.' + versions[1]+'.'+"$last"
		      echo "$patch"
		      sh "docker build . -t nadeem90/test-imagetage:$patch"
		      
                     }else if("${ImageTag}"=="Minor"){
		      def versions = version.split('\\.')
		      def mid = versions[1]
		      mid = mid.toInteger() + 1;
		      def minor = versions[0] + '.' + "$mid"+'.'+0
		      echo "$minor"
		      sh "docker build . -t nadeem90/test-imagetage:$minor"

                      echo "This is minor version"
                     }else{
                      echo "This is major version"
		      def versions = version.split('\\.')
		      def first = versions[0]
		      first = first.toInteger() + 1;
		      def major = "$first" + '.' + 0 +'.' + 0
		      echo "$major"
		      sh "docker build . -t nadeem90/test-imagetage:$major"
		      
                     }
                }    
  
           }
        }
     }
  } 
